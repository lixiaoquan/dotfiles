source ${HOME}/dotfiles/check_network_environment

# Function to add directory to PATH if it exists
add_to_path_if_exists() {
  if [ -d "$1" ]; then
    export PATH="$1:$PATH"
  fi
}

dotfiles_dir=$HOME/dotfiles

# Alias definitions.
if [ -f $dotfiles_dir/bash_aliases ]; then
    . $dotfiles_dir/bash_aliases
fi

# Host specific alias definitions
if [ -n "$ZSH_VERSION" ]; then
   HOSTNAME="$HOST"
fi

if is_internal_network; then
  if [ -f ~/.bash_aliases_internal ]; then
    . ~/.bash_aliases_internal
  fi
else
  if [ -f ~/.bash_aliases_external ]; then
    . ~/.bash_aliases_external
  fi
fi

export PATH="BEGIN_COMMON":$PATH:"BEFORE_COMMON"

export PATH=~/bin:~/.local/bin:$PATH

add_to_path_if_exists "/usr/local/cuda/bin"

arch=$(uname -m)

local_root="$HOME/local"

if [ $arch != "x86_64" ]; then
  # Add local binary to PATH
  local_root="$HOME/${arch}_local"
fi

add_to_path_if_exists "${local_root}/bin"

if [ $arch = "aarch64" ]; then
  add_to_path_if_exists "$HOME/node-v22.17.1-linux-arm64/bin"
else
  add_to_path_if_exists "$HOME/node-v22.17.1-linux-x64/bin"
fi

add_to_path_if_exists "$HOME/clangd_15.0.3/bin"

add_to_path_if_exists "$HOME/nvim-linux64/bin"

add_to_path_if_exists "$HOME/nvim-osx64/bin"

add_to_path_if_exists "$HOME/kitty/bin"

add_to_path_if_exists "$HOME/docker"

add_to_path_if_exists "$HOME/static_zsh/bin"

export PATH=$HOME/dotfiles/bin:$PATH

export PATH="END_COMMON":$PATH

export EDITOR=vim

export XDG_CONFIG_HOME=$HOME/dotfiles/config

case "$OSTYPE" in
  msys*)
    # To make ln -s work
    export MSYS=winsymlinks:nativestrict

    add_to_path_if_exists "$HOME/node-v18.14.0-win-x64"
    ;;
esac

# Remove duplicate
PATH="$(perl -e 'print join(":", grep { not $seen{$_}++ } split(/:/, $ENV{PATH}))')"
LD_LIBRARY_PATH="$(perl -e 'print join(":", grep { not $seen{$_}++ } split(/:/, $ENV{LD_LIBRARY_PATH}))')"
